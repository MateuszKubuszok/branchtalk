version: '2.1'

# initializes Postgres databases and Kafka topics

networks:
  branchtalk-monolith:
    driver: bridge

services:
  postgres-setup:
    image: 'bitnami/postgresql:12-debian-10'
    command: >
      sh -c "(psql --host postgres --command=\"CREATE DATABASE users\" || 0) &&
             (psql --host postgres --command=\"CREATE USER users WITH PASSWORD 'password'\" users || 0) &&
             (psql --host postgres --command=\"CREATE SCHEMA users AUTHORIZATION users\" users || 0) &&
             (psql --host postgres --command=\"CREATE DATABASE discussions\" || 0) &&
             (psql --host postgres --command=\"CREATE USER discussions WITH PASSWORD 'password'\" discussions || 0) &&
             (psql --host postgres --command=\"CREATE SCHEMA discussions AUTHORIZATION discussions\" discussions || 0)"
    environment:
      PGPASSWORD: password # for psql
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - branchtalk-monolith

  kafka-setup:
    image: 'bitnami/kafka:2-debian-10'
    volumes:
      - 'kafka_data:/bitnami'
    command: >
      sh -c 'cd /opt/bitnami/kafka/bin &&
             kafka-topics.sh --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic users &&
             kafka-topics.sh --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic users-internal &&
             kafka-topics.sh --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic discussions &&
             kafka-topics.sh --create --if-not-exists --zookeeper zookeeper:2181 --partitions 1 --replication-factor 1 --topic discussions-internal'
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      kafka:
        condition: service_healthy
    networks:
      - branchtalk-monolith

volumes:
  postgres_data:
    driver: local
  kafka_data:
    driver: local
